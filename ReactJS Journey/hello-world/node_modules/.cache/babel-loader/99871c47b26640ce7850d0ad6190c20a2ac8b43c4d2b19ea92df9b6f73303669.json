{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GMRIT\\\\Desktop\\\\WORK\\\\Learning\\\\ReactJS Journey\\\\hello-world\\\\src\\\\components\\\\ClickCounter.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class ClickCounter extends Component {\n  constructor(props) {\n    super(props);\n    this.incrementCount = () => {\n      this.setState(prevState => {\n        return {\n          count: prevState.count + 1\n        };\n      });\n    };\n    this.state = {\n      count: 0\n    };\n  }\n  render() {\n    const {\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.incrementCount,\n      children: [\" Clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default ClickCounter\n\n//Higher Order Components (HOC)\n//These are the components that take a component as an argument and return a new component.\n!== null && ClickCounter\n\n//Higher Order Components (HOC)\n//These are the components that take a component as an argument and return a new component.\n!== void 0 ? ClickCounter\n\n//Higher Order Components (HOC)\n//These are the components that take a component as an argument and return a new component.\n: Usually;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","ClickCounter","constructor","props","incrementCount","setState","prevState","count","state","render","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Usually"],"sources":["C:/Users/GMRIT/Desktop/WORK/Learning/ReactJS Journey/hello-world/src/components/ClickCounter.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class ClickCounter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    incrementCount = () => {\r\n        this.setState(prevState => {\r\n            return { count: prevState.count + 1 }\r\n        })\r\n    }\r\n  render() {\r\n    const {count} = this.state\r\n\r\n    return <button onClick={this.incrementCount}> Clicked {count} times</button>\r\n    \r\n  }\r\n}\r\n\r\nexport default ClickCounter\r\n\r\n\r\n//Higher Order Components (HOC)\r\n//These are the components that take a component as an argument and return a new component.\r\n??Usually "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,YAAY,SAASH,SAAS,CAAC;EAExCI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAA,KAOhBC,cAAc,GAAG,MAAM;MACnB,IAAI,CAACC,QAAQ,CAACC,SAAS,IAAI;QACvB,OAAO;UAAEC,KAAK,EAAED,SAAS,CAACC,KAAK,GAAG;QAAE,CAAC;MACzC,CAAC,CAAC;IACN,CAAC;IATG,IAAI,CAACC,KAAK,GAAG;MACTD,KAAK,EAAE;IACX,CAAC;EACL;EAOFE,MAAMA,CAAA,EAAG;IACP,MAAM;MAACF;IAAK,CAAC,GAAG,IAAI,CAACC,KAAK;IAE1B,oBAAOR,OAAA;MAAQU,OAAO,EAAE,IAAI,CAACN,cAAe;MAAAO,QAAA,GAAC,WAAS,EAACJ,KAAK,EAAC,QAAM;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAE9E;AACF;AAEA,eAAed;;AAGf;AACA;AAAA,YAJeA;;AAGf;AACA;AAAA,aAJeA;;AAGf;AACA;AAAA,EACEe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}