{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GMRIT\\\\Desktop\\\\WORK\\\\Learning\\\\ReactJS Journey\\\\hello-world\\\\src\\\\components\\\\LifecycleA.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LifecycleA extends Component {\n  // 1st method\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'leela'\n    };\n    console.log('LifecycleA constructor');\n  }\n\n  // 2nd method\n  static getDerivedStateFromProps(props, state) {\n    console.log('LifecycleA getDerivedStateFromProps');\n    return null;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default LifecycleA;\n\n// Lifecycle methods are the methods which are invoked at different phases of the component's lifecycle\n// There are 4 phases of the component's lifecycle\n// 1. Mounting - when an instance of a component is being created and inserted into the DOM \n//      - constructor, static getDerivedStateFromProps, render, componentDidMount\n//      - constructor is the only place where we can assign state directly without using setState\n//      - static getDerivedStateFromProps is used when the state of the component depends on changes in props over time\n//      - render is the only required method in a class component\n//      - componentDidMount is invoked immediately after a component and all its children components have been rendered to the DOM\n\n// 2. Updating - when a component is being re-rendered as a result of changes to either its props or state \n//      - static getDerivedStateFromProps, shouldComponentUpdate, render, getSnapshotBeforeUpdate, componentDidUpdate\n//      - static getDerivedStateFromProps is used when the state of the component depends on changes in props over time\n//      - shouldComponentUpdate is used to let React know if a component's output is not affected by the current change in state or props\n//      - getSnapshotBeforeUpdate is used to capture some information from the DOM before it is potentially changed\n//      - componentDidUpdate is invoked immediately after updating occurs\n\n// 3. Unmounting - when a component is being removed from the DOM \n//      - componentWillUnmount\n//      - componentWillUnmount is invoked immediately before a component is unmounted and destroyed\n\n// 4. Error Handling - when there is an error during rendering, in a lifecycle method, or in the constructor of any child component \n//      - static getDerivedStateFromError, componentDidCatch\n//      - static getDerivedStateFromError is used to render a fallback UI after an error is thrown\n//      - componentDidCatch is used to log the error information","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","LifecycleA","constructor","props","state","name","console","log","getDerivedStateFromProps","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/GMRIT/Desktop/WORK/Learning/ReactJS Journey/hello-world/src/components/LifecycleA.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class LifecycleA extends Component {\r\n\r\n  // 1st method\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       name: 'leela'\r\n    }\r\n    console.log('LifecycleA constructor')\r\n  }\r\n\r\n  // 2nd method\r\n  static getDerivedStateFromProps(props, state) {\r\n    console.log('LifecycleA getDerivedStateFromProps')\r\n    return null\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LifecycleA\r\n\r\n\r\n// Lifecycle methods are the methods which are invoked at different phases of the component's lifecycle\r\n// There are 4 phases of the component's lifecycle\r\n// 1. Mounting - when an instance of a component is being created and inserted into the DOM \r\n//      - constructor, static getDerivedStateFromProps, render, componentDidMount\r\n//      - constructor is the only place where we can assign state directly without using setState\r\n//      - static getDerivedStateFromProps is used when the state of the component depends on changes in props over time\r\n//      - render is the only required method in a class component\r\n//      - componentDidMount is invoked immediately after a component and all its children components have been rendered to the DOM\r\n\r\n\r\n// 2. Updating - when a component is being re-rendered as a result of changes to either its props or state \r\n//      - static getDerivedStateFromProps, shouldComponentUpdate, render, getSnapshotBeforeUpdate, componentDidUpdate\r\n//      - static getDerivedStateFromProps is used when the state of the component depends on changes in props over time\r\n//      - shouldComponentUpdate is used to let React know if a component's output is not affected by the current change in state or props\r\n//      - getSnapshotBeforeUpdate is used to capture some information from the DOM before it is potentially changed\r\n//      - componentDidUpdate is invoked immediately after updating occurs\r\n\r\n// 3. Unmounting - when a component is being removed from the DOM \r\n//      - componentWillUnmount\r\n//      - componentWillUnmount is invoked immediately before a component is unmounted and destroyed\r\n\r\n// 4. Error Handling - when there is an error during rendering, in a lifecycle method, or in the constructor of any child component \r\n//      - static getDerivedStateFromError, componentDidCatch\r\n//      - static getDerivedStateFromError is used to render a fallback UI after an error is thrown\r\n//      - componentDidCatch is used to log the error information\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,UAAU,SAASH,SAAS,CAAC;EAExC;EACAI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACVC,IAAI,EAAE;IACT,CAAC;IACDC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;EACvC;;EAEA;EACA,OAAOC,wBAAwBA,CAACL,KAAK,EAAEC,KAAK,EAAE;IAC5CE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IAClD,OAAO,IAAI;EACb;EAGAE,MAAMA,CAAA,EAAG;IACP,oBACET,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAEV;AACF;AAEA,eAAeZ,UAAU;;AAGzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}