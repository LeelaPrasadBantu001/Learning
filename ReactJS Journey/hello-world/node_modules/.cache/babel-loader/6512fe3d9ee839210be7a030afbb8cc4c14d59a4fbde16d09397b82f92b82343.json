{"ast":null,"code":"import React from \"react\";\nconst UserContext = /*#__PURE__*/React.createContext('default value- leela');\nconst UserProvider = UserContext.Provider;\nconst UserConsumer = UserContext.Consumer;\nexport { UserProvider, UserConsumer };\n\n//context API provides a way to pass data through the component tree without having to pass props down manually at every level.\n//heirarchy is like this:\n//App.js -> ComponentC -> ComponentE -> ComponentF\n//steps to use context API:\n//1. create a context Method is React.createContext()\n//2. provide a context value Method is Context.Provider\n//3. consume the context value method is Context.Consumer\n\n//can be wrapped in app.js and give value to it and then can be used in any component\n//can be consumed in componentF.js using Context.Consumer\n//also we can add default value to context like this:\n//const UserContext = React.createContext('default value')\n//and then can be used in componentF.js and in app.js we dont need to wrap it in UserProvider\n//default value can be used when we dont have any provider in heirarchy","map":{"version":3,"names":["React","UserContext","createContext","UserProvider","Provider","UserConsumer","Consumer"],"sources":["C:/Users/GMRIT/Desktop/WORK/Learning/ReactJS Journey/hello-world/src/components/Context.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst UserContext = React.createContext('default value- leela');\r\n\r\nconst UserProvider = UserContext.Provider;\r\n\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nexport { UserProvider, UserConsumer };\r\n\r\n\r\n\r\n//context API provides a way to pass data through the component tree without having to pass props down manually at every level.\r\n//heirarchy is like this:\r\n//App.js -> ComponentC -> ComponentE -> ComponentF\r\n//steps to use context API:\r\n//1. create a context Method is React.createContext()\r\n//2. provide a context value Method is Context.Provider\r\n//3. consume the context value method is Context.Consumer\r\n\r\n//can be wrapped in app.js and give value to it and then can be used in any component\r\n//can be consumed in componentF.js using Context.Consumer\r\n//also we can add default value to context like this:\r\n//const UserContext = React.createContext('default value')\r\n//and then can be used in componentF.js and in app.js we dont need to wrap it in UserProvider\r\n//default value can be used when we dont have any provider in heirarchy\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAa,CAAC,sBAAsB,CAAC;AAE/D,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAQ;AAEzC,MAAMC,YAAY,GAAGJ,WAAW,CAACK,QAAQ;AAEzC,SAASH,YAAY,EAAEE,YAAY;;AAInC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}