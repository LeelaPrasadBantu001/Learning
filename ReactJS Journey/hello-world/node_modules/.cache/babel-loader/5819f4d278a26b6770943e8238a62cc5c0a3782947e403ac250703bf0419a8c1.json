{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GMRIT\\\\Desktop\\\\WORK\\\\Learning\\\\ReactJS Journey\\\\hello-world\\\\src\\\\components\\\\counter.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n  increment() {\n    // this.setState({\n    //     count: this.state.count + 1\n    // }, () => {console.log('callback value', this.state.count)}) // callback function used fro asynchronous call\n\n    this.setState(prevState => ({\n      count: prevState.count + 1\n    })); // use this when you have to update state based on previous state\n    console.log(this.state.count);\n  }\n  incrementFive() {\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n    this.increment();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Count - \", this.state.count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.incrementFive(),\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Counter;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Counter","constructor","props","state","count","increment","setState","prevState","console","log","incrementFive","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["C:/Users/GMRIT/Desktop/WORK/Learning/ReactJS Journey/hello-world/src/components/counter.js"],"sourcesContent":["import React, {Component} from \"react\";\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 0   \r\n        }\r\n    }\r\n\r\n    increment() {\r\n        // this.setState({\r\n        //     count: this.state.count + 1\r\n        // }, () => {console.log('callback value', this.state.count)}) // callback function used fro asynchronous call\r\n\r\n        this.setState(prevState => ({\r\n            count: prevState.count + 1\r\n        })) // use this when you have to update state based on previous state\r\n       console.log(this.state.count)\r\n    }\r\n\r\n    incrementFive() {\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Count - {this.state.count}</div>\r\n                <button onClick={()=> this.incrementFive()}>Increment</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,SAASH,SAAS,CAAC;EAC5BI,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,SAASA,CAAA,EAAG;IACR;IACA;IACA;;IAEA,IAAI,CAACC,QAAQ,CAACC,SAAS,KAAK;MACxBH,KAAK,EAAEG,SAAS,CAACH,KAAK,GAAG;IAC7B,CAAC,CAAC,CAAC,EAAC;IACLI,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,KAAK,CAACC,KAAK,CAAC;EAChC;EAEAM,aAAaA,CAAA,EAAG;IACZ,IAAI,CAACL,SAAS,CAAC,CAAC;IAChB,IAAI,CAACA,SAAS,CAAC,CAAC;IAChB,IAAI,CAACA,SAAS,CAAC,CAAC;IAChB,IAAI,CAACA,SAAS,CAAC,CAAC;IAChB,IAAI,CAACA,SAAS,CAAC,CAAC;EACpB;EACAM,MAAMA,CAAA,EAAG;IACL,oBACIZ,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,GAAK,UAAQ,EAAC,IAAI,CAACT,KAAK,CAACC,KAAK;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrCjB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAK,IAAI,CAACP,aAAa,CAAC,CAAE;QAAAE,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC;EAEd;AACJ;AAEA,eAAehB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}